# Boot Board -Demo RESTful API Application backend with Spring Boot

spring.application.name=BootBoard

# Application context (url)
# Use 80 for production, 8080 for dev if you have apache running
server.port=8080
# ngrok settings
#server.servlet.context-path=/ 

server.servlet.context-path=

debug=true
# Coloring application output.
spring.output.ansi.enabled=ALWAYS

# - Database settings - local
#spring.datasource.url=jdbc:mysql://localhost:3306/boot_board
#spring.datasource.username=root
#spring.datasource.password=NewPassword2
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# - Database settings - infinity -doesnt work
#spring.datasource.url=jdbc:mysql://sql213.infinityfree.com:3306/if0_37912548_boot_board
#spring.datasource.username=if0_37912548
#spring.datasource.password=isUz8E7Odz0
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# - Database settings - posgres
spring.datasource.url=jdbc:postgresql://dpg-ctec0tlds78s73dd6eng-a.frankfurt-postgres.render.com/bootboard
spring.datasource.username=bootboard_user
spring.datasource.password=eREhBafwSOmQcPj6i84igkmH4OKXysep
spring.datasource.driver-class-name=org.postgresql.Driver

#update/create
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
# Hibernate dialect (optional, Hibernate can usually infer it, but not here)
# spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect

# - Redis settings (we dont need this for now)
#spring.redis.host=localhost
#spring.redis.port=6379

# - jackson workaround
spring.jackson.serialization.WRITE_DATES_AS_TIMESTAMPS: false
